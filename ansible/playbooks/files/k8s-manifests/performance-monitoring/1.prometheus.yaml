## ----------------------------------------------------------------------------
## ..:: Prometheus ClusterRole Configuration ::..
##-----------------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
## ----------------------------------------------------------------------------
## ..:: Prometheus ClusterRoleBinding Configuration ::..
##-----------------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: default
  namespace: performance-monitoring
---
## ----------------------------------------------------------------------------
## ..:: Prometheus ConfigMap Configuration ::..
##-----------------------------------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: performance-monitoring
data:
  prometheus.rules: |-
    groups:
    - name: devopscube demo alert
      rules:
      - alert: High Pod Memory
        expr: sum(container_memory_usage_bytes) > 1
        for: 1m
        labels:
          severity: slack
        annotations:
          summary: High Memory Usage
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"

    scrape_configs:
      - job_name: 'kubernetes-apiservers'

        kubernetes_sd_configs:
        - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

      
      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
      
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']

      - job_name: 'kubernetes-cadvisor'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
      - job_name: 'kubernetes-service-endpoints'

        kubernetes_sd_configs:
        - role: endpoints

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
---
## ----------------------------------------------------------------------------
## ..:: Prometheus Deployment Configuration ::..
##-----------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: performance-monitoring
  labels:
    app: prometheus
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      version: v1
  template:
    metadata:
      labels:
        app: prometheus
        version: v1
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - env:
        image: prom/prometheus
        imagePullPolicy: IfNotPresent
        name: prometheus
        ports:
        - containerPort: 9090
          protocol: TCP
        volumeMounts:
        - name: prometheus-configmap-config
          mountPath: /etc/prometheus/
        - name: prometheus-persistent-storage
          mountPath: /prometheus
          subPath: performance-monitoring/prometheus/data
      volumes:
      - name: prometheus-configmap-config
        configMap:
          defaultMode: 420
          name: prometheus-server-conf
      - name: prometheus-persistent-storage
        persistentVolumeClaim:
          claimName: performance-monitoring-pvc
---
## ----------------------------------------------------------------------------
## ..:: Prometheus POD / Service Configuration ::..
##-----------------------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: performance-monitoring
  labels:
    app: prometheus
    cis.f5.com/as3-tenant: performance-monitoring
    cis.f5.com/as3-app: prometheus-9090
    cis.f5.com/as3-pool: prometheus-pool-9090
spec:
  type: ClusterIP
  ports:
  - name: prometheus-9090
    port: 9090
    protocol: TCP
  selector:
      app: prometheus
---
## ----------------------------------------------------------------------------
## ..:: NGINX KIC VS Configuration for Hackazon ::.. - DO NO USE
##-----------------------------------------------------------------------------
#apiVersion: k8s.nginx.org/v1
#kind: VirtualServer
#metadata:
#  name: prometheus-vs
#  namespace: performance-monitoring
#spec:
#  host: prometheus-k8s.f5-udf.com
#  upstreams:
#  - name: prometheus-k8s
#    service: prometheus
#    port: 9090
#  routes:
#  - path: /
#    action:
#      pass: prometheus-k8s
